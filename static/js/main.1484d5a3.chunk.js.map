{"version":3,"sources":["ContactEditor/ContactEditor.js","ContactList/ContactList.js","Finder/Finder.js","App.js","index.js","ContactEditor/ContactEditor.module.css","ContactList/ContactList.module.css"],"names":["ContactEditor","state","name","number","handleChange","e","setState","currentTarget","value","numberChange","handleSubmit","preventDefault","props","onSubmit","className","styles","editorForm","this","editorTitle","onChange","type","pattern","title","required","Component","ContactList","contacts","onDeleteContact","map","id","listItem","bttn","onClick","Finder","App","filter","addContact","contact","shortid","generate","find","toLowerCase","alert","changeFilter","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","prevState","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1484d5a3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styles from './ContactEditor.module.css';\r\n\r\nclass ContactEditor extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ name: e.currentTarget.value });\r\n  };\r\n  numberChange = e => {\r\n    this.setState({ number: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.name, this.state.number);\r\n\r\n    this.setState({ name: '' });\r\n    this.setState({ number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.editorForm} onSubmit={this.handleSubmit}>\r\n        <h3 className={styles.editorTitle}>Name</h3>\r\n        <input\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <h3 className={styles.editorTitle}>Number</h3>\r\n        <input\r\n          value={this.state.number}\r\n          onChange={this.numberChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Сохранить</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactEditor;\r\n","import React from 'react';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <>\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.listItem}>\r\n          <p>\r\n            {name}:{number}\r\n          </p>\r\n          <button\r\n            className={styles.bttn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Удалить\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\n\r\nconst Finder = ({ value, onChange }) => (\r\n  <label>\r\n    Фильтр по имени\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Finder;\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactEditor from './ContactEditor';\nimport ContactList from './ContactList';\nimport Finder from './Finder';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  addContact = (name, number) => {\n    const contacts = this.state.contacts;\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log('componentDidUpdate');\n\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <h1>Phonebook </h1>\n\n        <ContactEditor onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Finder value={this.state.filter} onChange={this.changeFilter} />\n\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n\n// { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n// { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n// { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n// { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import ContactEditor from './ContactEditor/ContactEditor';\nimport App from './App';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editorForm\":\"ContactEditor_editorForm__Xlvrb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__24jDY\",\"bttn\":\"ContactList_bttn__1CHom\"};"],"sourceRoot":""}